// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonBackendApp.Data;

#nullable disable

namespace MonBackendApp.Migrations
{
    [DbContext(typeof(badrDbContext))]
    partial class badrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CentreIntéret", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodification")
                        .HasColumnType("datetime2");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CentreIntérets");
                });

            modelBuilder.Entity("Certificat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodification")
                        .HasColumnType("datetime2");

                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Certificats");
                });

            modelBuilder.Entity("ChangePasswordRequest", b =>
                {
                    b.Property<string>("ConfirmNewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ChangePasswordRequests");
                });

            modelBuilder.Entity("Compétence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodification")
                        .HasColumnType("datetime2");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Compétences");
                });

            modelBuilder.Entity("Langue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_creation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_modification")
                        .HasColumnType("datetime2");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Langues");
                });

            modelBuilder.Entity("MonBackendApp.Models.Experience", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datedebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datefin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodification")
                        .HasColumnType("datetime2");

                    b.Property<string>("entreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<string>("remarque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("MonBackendApp.Models.Formation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("actuel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("date_creation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_modification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datedebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datefin")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Formations");
                });

            modelBuilder.Entity("MonBackendApp.Models.LoginRequest", b =>
                {
                    b.Property<string>("gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motdepasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("LoginRequests");
                });

            modelBuilder.Entity("MonBackendApp.Models.Personne", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("codepostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodification")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lienfacebook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lieninstagram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lienlinkdin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lientwitter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motdepasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nombredexperience")
                        .HasColumnType("int");

                    b.Property<string>("numTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titreposte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("MonBackendApp.Models.PerssCent", b =>
                {
                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<int>("idCentreIntérets")
                        .HasColumnType("int");

                    b.HasKey("idPersonnes", "idCentreIntérets");

                    b.HasIndex("idCentreIntérets");

                    b.ToTable("PerssCents");
                });

            modelBuilder.Entity("MonBackendApp.Models.PerssComp", b =>
                {
                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<int>("idCompétences")
                        .HasColumnType("int");

                    b.HasKey("idPersonnes", "idCompétences");

                    b.HasIndex("idCompétences");

                    b.ToTable("PerssComps");
                });

            modelBuilder.Entity("MonBackendApp.Models.PerssLang", b =>
                {
                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<int>("idLangues")
                        .HasColumnType("int");

                    b.Property<string>("niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPersonnes", "idLangues");

                    b.HasIndex("idLangues");

                    b.ToTable("PerssLangs");
                });

            modelBuilder.Entity("MonBackendApp.Models.RegisterRequest", b =>
                {
                    b.Property<string>("gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motdepasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motdepasseconfirmation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("registerRequests");
                });

            modelBuilder.Entity("Projet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Remarque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datemodification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateprojet")
                        .HasColumnType("datetime2");

                    b.Property<int>("idPersonnes")
                        .HasColumnType("int");

                    b.Property<string>("lien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("MonBackendApp.Models.PerssCent", b =>
                {
                    b.HasOne("CentreIntéret", "CentreIntéret")
                        .WithMany("PerssCent")
                        .HasForeignKey("idCentreIntérets")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonBackendApp.Models.Personne", "personne")
                        .WithMany("PerssCent")
                        .HasForeignKey("idPersonnes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentreIntéret");

                    b.Navigation("personne");
                });

            modelBuilder.Entity("MonBackendApp.Models.PerssComp", b =>
                {
                    b.HasOne("Compétence", "Compétence")
                        .WithMany("PerssComp")
                        .HasForeignKey("idCompétences")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonBackendApp.Models.Personne", "personne")
                        .WithMany("PerssComp")
                        .HasForeignKey("idPersonnes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compétence");

                    b.Navigation("personne");
                });

            modelBuilder.Entity("MonBackendApp.Models.PerssLang", b =>
                {
                    b.HasOne("Langue", "langue")
                        .WithMany("PerssLang")
                        .HasForeignKey("idLangues")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonBackendApp.Models.Personne", "personne")
                        .WithMany("PerssLang")
                        .HasForeignKey("idPersonnes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("langue");

                    b.Navigation("personne");
                });

            modelBuilder.Entity("CentreIntéret", b =>
                {
                    b.Navigation("PerssCent");
                });

            modelBuilder.Entity("Compétence", b =>
                {
                    b.Navigation("PerssComp");
                });

            modelBuilder.Entity("Langue", b =>
                {
                    b.Navigation("PerssLang");
                });

            modelBuilder.Entity("MonBackendApp.Models.Personne", b =>
                {
                    b.Navigation("PerssCent");

                    b.Navigation("PerssComp");

                    b.Navigation("PerssLang");
                });
#pragma warning restore 612, 618
        }
    }
}
